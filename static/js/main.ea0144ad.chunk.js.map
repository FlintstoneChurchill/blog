{"version":3,"sources":["components/Logo/Logo.js","components/Navigation/Navigation.js","components/Navigation/NavigationItem/NavigationItem.js","components/UI/Toolbar/Toolbar.js","components/Layout/Layout.js","axios-blog.js","components/PostList/Post/Post.js","components/PostList/PostList.js","components/UI/Spinner/Spinner.js","containers/Feed/Feed.js","store/actions/actions.js","store/actions/actionTypes.js","components/UI/Button/Button.js","containers/SinglePost/SinglePost.js","containers/User/User.js","App.js","store/reducers/postsReducer.js","serviceWorker.js","index.js"],"names":["Logo","react_default","a","createElement","react_router_dom","className","to","Navigation","props","children","NavigationItem","Toolbar","react","components_Logo_Logo","components_Navigation_Navigation","Navigation_NavigationItem_NavigationItem","Layout","UI_Toolbar_Toolbar","instance","axios","create","baseURL","Post","concat","id","title","message","author","PostList","posts","map","post","PostList_Post_Post","key","body","Spinner","Feed","this","onFetchPosts","length","components_PostList_PostList","UI_Spinner_Spinner","Component","connect","state","dispatch","get","then","response","promises","data","userId","user","Object","objectSpread","name","Promise","all","type","fetchPostsSuccess","catch","err","error","Button","button","SinglePost","_this2","match","params","setState","UI_Button_Button","User","username","email","address","city","street","suite","company","catchPhrase","App","components_Layout_Layout","react_router","path","exact","component","initialState","singlePost","reducer","arguments","undefined","action","Boolean","window","location","hostname","store","createStore","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea0144ad.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Logo.sass\";\nimport {Link} from \"react-router-dom\";\n\nconst Logo = () => {\n    return (\n        <Link className=\"logo\" to=\"/\" >Blog</Link>\n    );\n};\n\nexport default Logo;\n","import React from 'react';\nimport \"./Navigation.sass\";\n\nconst Navigation = props => {\n    return (\n        <nav className=\"menu header__menu\">\n            <ul className=\"menu__list\">\n                {props.children}\n            </ul>\n        </nav>\n    );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\n\nconst NavigationItem = props => {\n    return (\n        <li className=\"menu__item\">\n            <NavLink className=\"menu__link\" to={props.to}>\n                {props.children}\n            </NavLink>\n        </li>\n    );\n};\n\nexport default NavigationItem;\n","import React, {Fragment} from 'react';\nimport Logo from \"../../Logo/Logo\";\nimport Navigation from \"../../Navigation/Navigation\";\nimport NavigationItem from \"../../Navigation/NavigationItem/NavigationItem\";\n\nconst Toolbar = () => {\n    return (\n        <Fragment>\n            <Logo />\n            <Navigation>\n                <NavigationItem to=\"/\">\n                    Home\n                </NavigationItem>\n            </Navigation>\n        </Fragment>\n    );\n};\n\nexport default Toolbar;\n","import React, {Fragment} from 'react';\nimport Toolbar from \"../UI/Toolbar/Toolbar\";\nimport './Layout.sass';\n\nconst Layout = props => {\n    return (\n        <Fragment>\n            <header className=\"header\">\n                <div className=\"container header__container\">\n                    <Toolbar/>\n                </div>\n            </header>\n            <main className=\"content\">\n                <div className=\"container\">\n                    {props.children}\n                </div>\n            </main>\n        </Fragment>\n    );\n};\n\nexport default Layout;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://jsonplaceholder.typicode.com\"\n});\n\nexport default instance;\n","import React from 'react';\nimport './Post.sass';\nimport {Link} from \"react-router-dom\";\n\nconst Post = props => {\n    return (\n        <article className=\"post\">\n            <h3 className=\"post__title\">\n                <Link\n                    to={`/posts/${props.id}`}\n                    className=\"post__title-link\"\n                >\n                    {props.title}\n                </Link>\n            </h3>\n            <p className=\"post__message\">{props.message}</p>\n            <p className=\"post__author\">\n                <Link className=\"post__author_link\" to={`/users/${props.id}`}>\n                    {props.author}\n                </Link>\n            </p>\n        </article>\n    );\n};\n\nexport default Post;\n","import React from 'react';\nimport Post from \"./Post/Post\";\nimport './PostList.sass';\n\nconst PostList = props => {\n    const posts = props.posts.map(post => (\n        <Post\n            key={post.id}\n            id={post.id}\n            title={post.title}\n            message={post.body}\n            author={post.author}\n        />\n    ));\n\n    return (\n        <section className=\"posts\">\n            {posts}\n        </section>\n    );\n};\n\nexport default PostList;\n","import React from 'react';\nimport \"./Spinner.css\";\n\nconst Spinner = () => {\n    return (\n        <div className=\"spinner\">\n            <div id=\"circularG\">\n                <div id=\"circularG_1\" className=\"circularG\"/>\n                <div id=\"circularG_2\" className=\"circularG\"/>\n                <div id=\"circularG_3\" className=\"circularG\"/>\n                <div id=\"circularG_4\" className=\"circularG\"/>\n                <div id=\"circularG_5\" className=\"circularG\"/>\n                <div id=\"circularG_6\" className=\"circularG\"/>\n                <div id=\"circularG_7\" className=\"circularG\"/>\n                <div id=\"circularG_8\" className=\"circularG\"/>\n            </div>\n        </div>\n    );\n};\n\nexport default Spinner;\n","import React, {Component, Fragment} from 'react';\nimport {connect} from \"react-redux\";\nimport {fetchPosts} from \"../../store/actions/actions\";\nimport PostList from \"../../components/PostList/PostList\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport './Feed.sass';\n\nclass Feed extends Component {\n    componentDidMount() {\n        this.props.onFetchPosts();\n    }\n\n    render() {\n        if (!this.props.posts.length) return <Spinner/>;\n        return (\n            <Fragment>\n                <h1 className=\"main_title\">Posts</h1>\n                <PostList\n                    posts={this.props.posts}\n                />\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        posts: state.posts\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchPosts: () => dispatch(fetchPosts())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feed);\n","import axios from \"../../axios-blog\";\nimport {FETCH_POSTS_SUCCESS, FETCH_SINGLE_POST_SUCCESS} from \"./actionTypes\";\n\nexport const fetchPostsSuccess = (posts) => {\n    return {type: FETCH_POSTS_SUCCESS, posts};\n};\nexport const fetchPostsError = (error) => {\n    return {type: FETCH_POSTS_SUCCESS, error};\n};\n\nexport const fetchSinglePostSuccess = (post) => {\n    return {type: FETCH_SINGLE_POST_SUCCESS, post};\n};\n\nexport const fetchPosts = () => {\n    return dispatch => {\n        return axios.get('/posts')\n            .then(response => {\n                const posts = response.data;\n\n                const promises = posts.map(post => {\n                    return axios.get(`/users/${post.userId}`).then(user => {\n                        return {...post, author: user.data.name};\n                    });\n                });\n\n                return Promise.all(promises);\n\n            })\n            .then(posts => {\n                dispatch(fetchPostsSuccess(posts));\n            }).catch(err => {\n                dispatch(fetchPostsError(err));\n            });\n    }\n};\n","export const FETCH_POSTS_SUCCESS = \"FETCH_POSTS_SUCCESS\";\nexport const FETCH_POSTS_ERROR = \"FETCH_POSTS_ERROR\";\nexport const FETCH_SINGLE_POST_SUCCESS = \"FETCH_SINGLE_POST_SUCCESS\";\n","import React, {Fragment} from 'react';\nimport {Link} from \"react-router-dom\";\nimport \"./Button.sass\";\n\nconst Button = props => {\n\n    let button;\n    if (props.type === 'link') {\n        button = <Link className=\"button\" to={props.to}>{props.children}</Link>;\n    } else if(props.type === 'button') {\n        button = <button className=\"button\">{props.children}</button>\n    }\n\n    return (\n        <Fragment>\n            {button}\n        </Fragment>\n\n    );\n};\n\nexport default Button;\n","import React, {Component, Fragment} from 'react';\nimport './SinglePost.sass';\nimport {Link} from \"react-router-dom\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport Button from \"../../components/UI/Button/Button\";\nimport axios from \"../../axios-blog\";\n\nclass SinglePost extends Component {\n    state = {\n        post: null,\n        error: null\n    };\n    componentWillMount() {\n        const id = this.props.match.params.id;\n        axios.get(`/posts/${id}`)\n            .then(response => {\n                let post = response.data;\n                axios.get(`/users/${post.userId}`)\n                    .then(user => {\n                        post.author = user.data.name;\n                        this.setState({post});\n                    })\n                    .catch(error => {\n                        this.setState({error});\n                    });\n            });\n    }\n\n    render() {\n        const post = this.state.post;\n        if (!post) return <Spinner />;\n        return (\n            <Fragment>\n                <section className=\"post post-full\">\n                <h1 className=\"post__title\">{post.title}</h1>\n                    <p className=\"post__author post__author-full_post\">\n                        Author: <Link\n                                    className=\"post__author_link\"\n                                    to={`/users/${post.userId}`}\n                                >\n                                    {post.author}\n                                </Link>\n                    </p>\n                    <p className=\"post__message\">\n                        {post.body}\n                    </p>\n                    <Button type=\"link\" to=\"/\">Go Back</Button>\n                </section>\n            </Fragment>\n        );\n    }\n}\n\nexport default SinglePost;\n","import React, {Component} from 'react';\nimport axios from \"../../axios-blog\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\nclass User extends Component {\n    state = {\n        user: null\n    };\n\n    componentDidMount() {\n        const id = this.props.match.params.id;\n        axios.get(`/users/${id}`).then(response => {\n            const user = response.data;\n            this.setState({user});\n        });\n    }\n\n    render() {\n        const user = this.state.user;\n        if (!user) {\n            return <Spinner/>;\n        }\n        return (\n            <div className=\"user\">\n                <h1 className=\"main_title\">{user.name}</h1>\n                <ul className=\"user__info\">\n                    <li className=\"user__info_item\"><b>Username</b>: {user.username}</li>\n                    <li className=\"user__info_item\"><b>Email</b>: {user.email}</li>\n                    <li className=\"user__info_item\">\n                        <b>Address</b>:\n                        <ul className=\"user__info\">\n                            <li className=\"user__info_item\">City: {user.address.city}</li>\n                            <li className=\"user__info_item\">Street: {user.address.street}</li>\n                            <li className=\"user__info_item\">Suite: {user.address.suite}</li>\n                        </ul>\n                    </li>\n                    <li className=\"user__info\">\n                        <b>Company</b>\n                        <ul className=\"user__info_item\">\n                            <li className=\"user__info_item\">\"{user.company.name}\" - {user.company.catchPhrase}</li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default User;\n","import React from 'react';\nimport Layout from \"./components/Layout/Layout\";\nimport Feed from \"./containers/Feed/Feed\";\nimport {Route, Switch} from \"react-router\";\nimport SinglePost from \"./containers/SinglePost/SinglePost\";\nimport User from \"./containers/User/User\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Layout>\n                <Switch>\n                    <Route path=\"/\" exact component={Feed} />\n                    <Route path=\"/blog\" exact component={Feed} />\n                    <Route path=\"/posts\" exact component={Feed} />\n                    <Route path=\"/posts/:id\" component={SinglePost} />\n                    <Route path=\"/users/:id\" component={User} />\n                </Switch>\n            </Layout>\n        </div>\n    );\n}\n\nexport default App;\n","import {FETCH_POSTS_ERROR, FETCH_POSTS_SUCCESS, FETCH_SINGLE_POST_SUCCESS} from \"../actions/actionTypes\";\n\nconst initialState = {\n    posts: [],\n    singlePost: null,\n    error: null\n};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case FETCH_POSTS_SUCCESS:\n            return {...state, posts: action.posts, singlePost: null};\n        case FETCH_SINGLE_POST_SUCCESS:\n            return {...state, singlePost: action.post};\n        case FETCH_POSTS_ERROR:\n            return {...state, error: action.error};\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport reducer from './store/reducers/postsReducer';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}